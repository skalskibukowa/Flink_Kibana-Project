version: "3.9"

networks:
  bridge:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - bridge
    container_name: zookeeper

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 0.0.0.0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      JMX_PORT: 9999
    networks:
      - bridge
    container_name: kafka

  kafka-producer:
    image: kafka-producer
    depends_on:
      - kafka
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:32181"
      PRODUCER_INTERVAL: 100
    networks:
      - bridge
    container_name: kafka-producer

  flink-processor:
    image: flink-processor
    depends_on:
      - kafka
    environment:
      KAFKA_SERVER: "kafka:9092"
      ZOOKEEPER_SERVER: "zookeeper:32181"
      PRODUCER_INTERVAL: 100
    networks:
      - bridge
    container_name: flink-processor

  postgres:
    build:
      - ./Postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - 5438:5432
    networks:
      - bridge
    container_name: postgresFlink
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: es-container
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ports:
      - 9200:9200

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.11.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

volumes:
  settings:
  data:
